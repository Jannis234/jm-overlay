#!/sbin/openrc-run
# Copyright 1999-2016 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Id$

depend() {
    after procfs
}

do_register() {
	echo ":$1:M::$2::/usr/bin/dyld:" > /proc/sys/fs/binfmt_misc/register
}

start() {
   ebegin "Registering Mach-O binaries with darling"

   if [ ! -d /proc/sys/fs/binfmt_misc ] ; then
      modprobe -q binfmt_misc
   fi

   if [ ! -d /proc/sys/fs/binfmt_misc ] ; then
       eend $? "You need support for 'misc binaries' in your kernel!" || return
   fi

   if [ ! -f /proc/sys/fs/binfmt_misc/register ] ; then
      mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc >/dev/null 2>&1
      eend $? || return
   fi

   do_register "mach-o-32be" "\xFE\xED\xFA\xCE" # 32bit, big endian
   do_register "mach-o-32le" "\xCE\xFA\xED\xFE" # 32bit, little endian
   do_register "mach-o-64be" "\xFE\xED\xFA\xCF" # 64bit, big endian
   do_register "mach-o-64le" "\xCF\xFA\xED\xFE" # 64bit, little endian
   do_register "mach-o-fatbe" "\xCA\xFE\xBA\xBE" # Fat binary, big endian (same magic number as java bytecode!)
   do_register "mach-o-fatle" "\xBE\xBA\xFA\xCA" # Fat binary, little endian

   eend $?
}

stop() {
   ebegin "Unregistering Mach-O binaries"

   for i in mach-o-32be mach-o-32le mach-o-64be mach-o-64le mach-o-fatbe mach-o-fatle; do
      if [ -f /proc/sys/fs/binfmt_misc/$i ] ; then
         echo '-1' > /proc/sys/fs/binfmt_misc/$i
      fi
   done

   eend $?
}
